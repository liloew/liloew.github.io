<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>liloew 在写字</title><link>https://blog.liloew.in/</link><description>Recent content on liloew 在写字</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 15 Oct 2023 14:58:16 +0800</lastBuildDate><atom:link href="https://blog.liloew.in/index.xml" rel="self" type="application/rss+xml"/><item><title>DHCP 协议分析</title><link>https://blog.liloew.in/posts/rust-implementation-dhcp-1/</link><pubDate>Sun, 15 Oct 2023 14:58:16 +0800</pubDate><guid>https://blog.liloew.in/posts/rust-implementation-dhcp-1/</guid><description>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>最近因工作需要接触了 &lt;code>H3C&lt;/code> 的 &lt;code>iNode&lt;/code> 客户端, 参考其官网对 &lt;code>iNode&lt;/code> 的描述:&lt;/p>
&lt;pre tabindex="0">&lt;code>iNode智能客户端是H3C公司自行设计开发的基于Windows的多业务接入客户端软件，提供802.1x、Portal、VPN等多种认证方式，可以与H3C以太网交换机、路由器、VPN网关等网络设备共同组网，实现对局域网、广域网、VPN、无线接入的用户认证，是对用户终端进行身份验证、安全状态评估以及安全策略实施的主体，可以按照企业接入安全策略的要求，实现基于角色/身份的权限和安全控制。
&lt;/code>&lt;/pre>&lt;p>以此为发端, 本来主要讨论 &lt;code>DHCP&lt;/code> 协议的设计与实现, 以期最后通过修改 &lt;code>DHCP&lt;/code> 协议实现 &lt;code>私有&lt;/code> 的 &lt;code>DHCP&lt;/code> 协议, 实现一定条件下限制网络访问的目的.&lt;/p>
&lt;p>同时亦声明本文仅就技术上讨论一种私有协议实现的可能性, 只有如何实现以及是否可行并不在本文讨论范围内.&lt;/p></description><content>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>最近因工作需要接触了 &lt;code>H3C&lt;/code> 的 &lt;code>iNode&lt;/code> 客户端, 参考其官网对 &lt;code>iNode&lt;/code> 的描述:&lt;/p>
&lt;pre tabindex="0">&lt;code>iNode智能客户端是H3C公司自行设计开发的基于Windows的多业务接入客户端软件，提供802.1x、Portal、VPN等多种认证方式，可以与H3C以太网交换机、路由器、VPN网关等网络设备共同组网，实现对局域网、广域网、VPN、无线接入的用户认证，是对用户终端进行身份验证、安全状态评估以及安全策略实施的主体，可以按照企业接入安全策略的要求，实现基于角色/身份的权限和安全控制。
&lt;/code>&lt;/pre>&lt;p>以此为发端, 本来主要讨论 &lt;code>DHCP&lt;/code> 协议的设计与实现, 以期最后通过修改 &lt;code>DHCP&lt;/code> 协议实现 &lt;code>私有&lt;/code> 的 &lt;code>DHCP&lt;/code> 协议, 实现一定条件下限制网络访问的目的.&lt;/p>
&lt;p>同时亦声明本文仅就技术上讨论一种私有协议实现的可能性, 只有如何实现以及是否可行并不在本文讨论范围内.&lt;/p>
&lt;h1 id="实现">实现&lt;/h1>
&lt;p>&lt;code>DHCP&lt;/code> 协议前身是 &lt;code>BOOTP&lt;/code> 协议, 当前关于 &lt;code>DHCP&lt;/code> 最新的信息可在 &lt;code>RFC 2131&lt;/code> 中查阅, 另外 &lt;code>DHCPv6&lt;/code> 则可在 &lt;code>RFC 3315&lt;/code> 中定义. 不过本文当前仅讨论 &lt;code>DHCPv4&lt;/code>. &lt;code>DHCP&lt;/code> 全称 &lt;code>Dynamic Host Configuration Protocol&lt;/code>, 即 &lt;code>动态主机配置协议&lt;/code>, 是一种使网络管理员能够集中管理和自动分配 &lt;code>IP&lt;/code> 地址的通信协议. 在 &lt;code>IP&lt;/code> 网络中每个连接 &lt;code>Internet&lt;/code> 的设备都需要分配唯一的 &lt;code>IP&lt;/code> 地址, &lt;code>DHCP&lt;/code> 协议可使得网络管理员采用中心化的方式分配 &lt;code>IP&lt;/code> 地址, 并对 &lt;code>IP&lt;/code> 地址的使用进行必要的管理, 当某台计算机移动到网络其他位置时, 能自动收到新的 &lt;code>IP&lt;/code> 地址请求.&lt;/p>
&lt;p>同时 &lt;code>DHCP&lt;/code> 使用了 &lt;code>租约&lt;/code> 的概念, 这使得在局域网中可以最大化地使用有限的 &lt;code>IP&lt;/code> 地址资源, 同时 &lt;code>DHCP&lt;/code> 也支持为计算机分配静态地址.&lt;/p>
&lt;p>&lt;code>DHCP&lt;/code> 协议是一种基于 &lt;code>UDP&lt;/code> 之上的应用层协议, 主要是因为在依据 &lt;code>DHCP&lt;/code> 获取 &lt;code>IP&lt;/code> 地址前计算机尚无有效的 &lt;code>IP&lt;/code> 地址, 此时 &lt;code>客户端&lt;/code> 可利用 &lt;code>UDP&lt;/code> 的广播特性向局域网内广播 &lt;code>DHCP&lt;/code> 报文, 同时 &lt;code>DHCP 服务器&lt;/code> 亦采用广播的形式向局域网内响应对应请求. &lt;code>DHCPv4&lt;/code> 定义了以下几种消息:
&lt;code>DHCPDISCOVER&lt;/code> 消息用于 &lt;code>客户端&lt;/code> 广播以确定局域网内 &lt;code>服务器&lt;/code>.
&lt;code>DHCPOFFER&lt;/code> 消息用于服务端响应客户端的 &lt;code>DHCPDISCOVER&lt;/code> 消息并向客户端提供配置参数.
&lt;code>DHCPREQUEST&lt;/code> 消息主要用于客户端依据服务端提供的配置参数向服务端请求 &lt;code>IP&lt;/code> 地址.
&lt;code>DHCPACK&lt;/code> 消息用于服务端向客户端依据配置参数确认分配的 &lt;code>IP 地址&lt;/code>.
&lt;code>DHCPNAK&lt;/code> 消息用于服务端通知客户端网络地址错误或客户端地址过期等.
&lt;code>DHCPDECLINE&lt;/code> 消息用于客户端向服务端指示已拥有网络地址.
&lt;code>DHCPRELEASE&lt;/code> 消息用于客户端告知服务端释放对应的网络地址.
&lt;code>DHCPINFORM&lt;/code> 消息用于客户端向服务端请求本地配置.&lt;/p>
&lt;p>&lt;code>RFC 2131&lt;/code> 在定义 &lt;code>DHCP&lt;/code> 的几种消息的同时也定义了 &lt;code>DHCP&lt;/code> 报文格式:&lt;/p>
&lt;pre tabindex="0">&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| op (1) | htype (1) | hlen (1) | hops (1) |
+---------------+---------------+---------------+---------------+
| xid (4) |
+-------------------------------+-------------------------------+
| secs (2) | flags (2) |
+-------------------------------+-------------------------------+
| ciaddr (4) |
+---------------------------------------------------------------+
| yiaddr (4) |
+---------------------------------------------------------------+
| siaddr (4) |
+---------------------------------------------------------------+
| giaddr (4) |
+---------------------------------------------------------------+
| |
| chaddr (16) |
| |
| |
+---------------------------------------------------------------+
| |
| sname (64) |
+---------------------------------------------------------------+
| |
| file (128) |
+---------------------------------------------------------------+
| |
| options (variable) |
+---------------------------------------------------------------+
&lt;/code>&lt;/pre>&lt;p>&lt;code>op&lt;/code> 字段定义了消息的方向 &lt;code>1&lt;/code> 为 &lt;code>客户端&lt;/code> 向 &lt;code>服务端&lt;/code> 发生请求, &lt;code>2&lt;/code> 则为 &lt;code>服务端&lt;/code> 发回的响应.
&lt;code>htype&lt;/code> 字段定义了 &lt;code>硬件地址类型&lt;/code>, &lt;code>1&lt;/code> 为 &lt;code>10mb&lt;/code> 以太网, 具体定义可参见 &lt;code>RFC 1700&lt;/code>, 在 &lt;code>DHCP&lt;/code> 中一般使用 &lt;code>1&lt;/code>.
&lt;code>hlen&lt;/code> 字段表示 &lt;code>硬件地址长度&lt;/code>, 依据 &lt;code>htype&lt;/code> 定义当 &lt;code>htype&lt;/code> 为 &lt;code>1&lt;/code>, 即 &lt;code>以太网&lt;/code> 时, 该字段为 &lt;code>6&lt;/code>, 也即 &lt;code>MAC&lt;/code> 地址长度.
&lt;code>hops&lt;/code> 字段表示 &lt;code>DHCP&lt;/code> 协议经过的节点数, 客户端在初始发送 &lt;code>DHCP&lt;/code> 请求时将其设置为 &lt;code>0&lt;/code>, &lt;code>DHCP&lt;/code> 协议的 &lt;code>中继&lt;/code> 节点可选地增加该字段的值.
&lt;code>xid&lt;/code> 字段表示 &lt;code>事务 ID&lt;/code>, 客户端选择一个随机数, 并在其后客户端发送或是服务端发回响应过程中使用该值.
&lt;code>secs&lt;/code> 字段为客户端获取 &lt;code>IP&lt;/code> 到进行地址 &lt;code>续约&lt;/code> 时所经历的秒数.
&lt;code>flags&lt;/code> 字段当前在 &lt;code>DHCP&lt;/code> 协议中仅采用了高 1 位, 后续的 15 位当前都是保留的, 使用的 1 位主要用于提示 &lt;code>DHCP&lt;/code> &lt;code>服务端&lt;/code> 或 &lt;code>中继&lt;/code> 节点是否将广播信息发送到客户端所在的子网.
&lt;code>ciaddr&lt;/code> 字段为 &lt;code>客户端&lt;/code> &lt;code>IP 地址&lt;/code>, 仅当客户端在 &lt;code>BOUND&lt;/code>, &lt;code>RENEW&lt;/code> 或者 &lt;code>REBINDING&lt;/code> 状态时才填充该字段.
&lt;code>yiaddr&lt;/code> 字段表示 &lt;code>your&lt;/code> &lt;code>客户端&lt;/code> &lt;code>IP 地址&lt;/code>.
&lt;code>siaddr&lt;/code> 字段为下一 &lt;code>服务端&lt;/code> 节点 &lt;code>IP&lt;/code>, 仅当在 &lt;code>DHCPOFFER&lt;/code> 和 &lt;code>DHCPACK&lt;/code> 请求中填充该字段.
&lt;code>giaddr&lt;/code> 字段为 &lt;code>中继节点&lt;/code> &lt;code>IP 地址&lt;/code>.
&lt;code>chaddr&lt;/code> 字段为 &lt;code>客户端&lt;/code> &lt;code>硬件地址&lt;/code>, 一般为 &lt;code>MAC 地址&lt;/code>.
&lt;code>sname&lt;/code> 字段为可选的 &lt;code>服务器主机名&lt;/code>, 并且以 &lt;code>null&lt;/code> 字符串结束, 也即 &lt;code>0x00&lt;/code>.
&lt;code>file&lt;/code> 字段为 &lt;code>启动文件名&lt;/code>, 在 &lt;code>DHCPDISCOVER&lt;/code> 消息中以常规文件名或 &lt;code>null&lt;/code> 表示, 在 &lt;code>DHCPOFFER&lt;/code> 消息中以全限定路径名表示.
&lt;code>options&lt;/code> 字段是变长的可选项. 其中首 4 位为固定的 &lt;code>magic cookie&lt;/code> - [0x63, 0x82, 0x53, 0x63].&lt;/p>
&lt;pre tabindex="0">&lt;code> Server Client Server
(not selected) (selected)
v v v
| | |
| Begins initialization |
| | |
| _____________/|\____________ |
|/DHCPDISCOVER | DHCPDISCOVER \|
| | |
Determines | Determines
configuration | configuration
| | |
|\ | ____________/ |
| \________ | /DHCPOFFER |
| DHCPOFFER\ |/ |
| \ | |
| Collects replies |
| \| |
| Selects configuration |
| | |
| _____________/|\____________ |
|/ DHCPREQUEST | DHCPREQUEST\ |
| | |
| | Commits configuration
| | |
| | _____________/|
| |/ DHCPACK |
| | |
| Initialization complete |
| | |
. . .
. . .
| | |
| Graceful shutdown |
| | |
| |\ ____________ |
| | DHCPRELEASE \|
| | |
| | Discards lease
| | |
v v v
&lt;/code>&lt;/pre>&lt;p>上图展示了局域网内 &lt;code>DHCP&lt;/code> 信令通信的流程.&lt;/p>
&lt;ul>
&lt;li>客户端在本地局域网内广播 &lt;code>DHCPDISCOVER&lt;/code> 消息, 如果 &lt;code>DHCP&lt;/code> 服务端与客户端不处于同一物理网段则可通过可选的 &lt;code>中继&lt;/code> 节点进行中继转发.&lt;/li>
&lt;li>局域网内所有服务端都可能通过 &lt;code>DHCPOFFER&lt;/code> 消息对 &lt;code>DHCPDISCOVER&lt;/code> 消息进行响应, 同时在 &lt;code>DHCPOFFER&lt;/code> 消息内通过 &lt;code>yiaddr&lt;/code> 字段指示可用的网络地址, 同时也在 &lt;code>options&lt;/code> 字段内包含额外的参数.&lt;/li>
&lt;li>客户端可能会从一或多个服务端收到收到一或多个 &lt;code>DHCPOFFER&lt;/code> 消息. 客户端根据在 &lt;code>DHCPOFFER&lt;/code> 消息内包含的参数通过广播 &lt;code>DHCPREQUEST&lt;/code> 消息选择一个服务端进行响应, 并通过 &lt;code>服务端标识&lt;/code>(&lt;code>server identifier&lt;/code>) 指示具体选择的服务器. 同时在 &lt;code>yiaddr&lt;/code> 字段内保存欲请求的 &lt;code>IP&lt;/code>.&lt;/li>
&lt;li>对于未被选中的服务端收到 &lt;code>DHCPREQUEST&lt;/code> 广播时(根据 &lt;code>server identifier&lt;/code> 字段)明确客户端拒绝了其预分配的 &lt;code>IP&lt;/code> 地址. 针对被选中的服务端则内部提交并将对应网络地址与客户端相绑定, 同时通过 &lt;code>DHCPACK&lt;/code> 消息通知客户端. 在 &lt;code>DHCPACK&lt;/code> 消息内的 &lt;code>yiaddr&lt;/code> 字段同时包含选择的网络地址. 如果被选中的服务端无法响应 &lt;code>DHCPREQUEST&lt;/code> 消息(如待分配的网络地址已被使用)则应当通过 &lt;code>DHCPNAK&lt;/code> 向客户端响应.&lt;/li>
&lt;li>客户端收到 &lt;code>DHCPACK&lt;/code> 时需根据 &lt;code>options&lt;/code> 字段内配置的参数进行最后的检查(如通过 &lt;code>ARP&lt;/code> 检查分配的网络地址是否可用), 如果客户端发现该网络地址已被使用则应当通过 &lt;code>DHCPDECLINE&lt;/code> 向服务端进行响应并重启以上配置流程. 为防止过多的网络流量客户端应当至少等待 &lt;code>10s&lt;/code> 再次进行配置. 如果客户端收到 &lt;code>DHCPNAK&lt;/code> 则立即重启配置流程.&lt;/li>
&lt;li>客户端可通过在 &lt;code>DHCPRELEASE&lt;/code> 消息的 &lt;code>client identifier&lt;/code> 或 &lt;code>chaddr&lt;/code> 字段内包含标识以告知服务端其已放弃对网络地址的租用.&lt;/li>
&lt;/ul>
&lt;p>客户端可能收到来自服务端的 &lt;code>DHCPOFFER&lt;/code>, &lt;code>DHCPACK&lt;/code> 和 &lt;code>DHCPNAK&lt;/code> 三种消息; 服务端可收到来自客户端的 &lt;code>DHCPDISCOVER&lt;/code>, &lt;code>DHCPREQUEST&lt;/code>, &lt;code>DHCPDECLINE&lt;/code>, &lt;code>DHCPRELEASE&lt;/code> 和 &lt;code>DHCPINFORM&lt;/code> 五种消息. 下图则详细描述了 &lt;code>DHCP&lt;/code> 客户端的状态间流转:&lt;/p>
&lt;pre tabindex="0">&lt;code> -------- -------
| | +--------------------------&amp;gt;| |&amp;lt;-------------------+
| INIT- | | +--------------------&amp;gt;| INIT | |
| REBOOT |DHCPNAK/ +----------&amp;gt;| |&amp;lt;---+ |
| |Restart| | ------- | |
-------- | DHCPNAK/ | | |
| Discard offer | -/Send DHCPDISCOVER |
-/Send DHCPREQUEST | | |
| | | DHCPACK v | |
----------- | (not accept.)/ ----------- | |
| | | Send DHCPDECLINE | | |
| REBOOTING | | | | SELECTING |&amp;lt;----+ |
| | | / | | |DHCPOFFER/ |
----------- | / ----------- | |Collect |
| | / | | | replies |
DHCPACK/ | / +----------------+ +-------+ |
Record lease, set| | v Select offer/ |
timers T1, T2 ------------ send DHCPREQUEST | |
| +-----&amp;gt;| | DHCPNAK, Lease expired/ |
| | | REQUESTING | Halt network |
DHCPOFFER/ | | | |
Discard ------------ | |
| | | | ----------- |
| +--------+ DHCPACK/ | | |
| Record lease, set -----| REBINDING | |
| timers T1, T2 / | | |
| | DHCPACK/ ----------- |
| v Record lease, set ^ |
+----------------&amp;gt; ------- /timers T1,T2 | |
+-----&amp;gt;| |&amp;lt;---+ | |
| | BOUND |&amp;lt;---+ | |
DHCPOFFER, DHCPACK, | | | T2 expires/ DHCPNAK/
DHCPNAK/Discard ------- | Broadcast Halt network
| | | | DHCPREQUEST |
+-------+ | DHCPACK/ | |
T1 expires/ Record lease, set | |
Send DHCPREQUEST timers T1, T2 | |
to leasing server | | |
| ---------- | |
| | |------------+ |
+-&amp;gt;| RENEWING | |
| |----------------------------+
----------
&lt;/code>&lt;/pre>&lt;h2 id="options">OPTIONS&lt;/h2>
&lt;p>&lt;code>options&lt;/code> 定义为 2 字节的 &lt;code>Code&lt;/code> 和 1 字节的 &lt;code>Len&lt;/code>, 而后则依据 &lt;code>Len&lt;/code> 包含指定长度字节的数据体. 由于当前 &lt;code>options&lt;/code> 众多当前仅列举一些比较重要的 &lt;code>options&lt;/code>.&lt;/p>
&lt;ol start="0">
&lt;li>
&lt;p>&lt;code>magic cookie&lt;/code>, 正如前文所述, 在 &lt;code>DHCP&lt;/code> 报文内包含 4 字节的 &lt;code>magic cookie&lt;/code>, 其值为 [0x63, 0x82, 0x53, 0x63].&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>DHCP Message Type&lt;/code> 该选项编码为 &lt;code>53&lt;/code>, 其后在 &lt;code>Len&lt;/code> 内定义了 1 字节的数据体, 即 &lt;code>Type&lt;/code>, 而 &lt;code>Type&lt;/code> 在为 &lt;code>0x01 ~ 0x08&lt;/code> 若干种不同的 &lt;code>DHCP&lt;/code> 消息类型.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Value Message Type
----- ------------
1 DHCPDISCOVER
2 DHCPOFFER
3 DHCPREQUEST
4 DHCPDECLINE
5 DHCPACK
6 DHCPNAK
7 DHCPRELEASE
8 DHCPINFORM
Code Len Type
+-----+-----+-----+
| 53 | 1 | 1-9 |
+-----+-----+-----+
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>&lt;code>Client-identifier&lt;/code> 该选项编码为 &lt;code>61&lt;/code>, 其后在 &lt;code>Len&lt;/code> 内定义了 &lt;code>n&lt;/code> 字节长度的数据体, 其中包含 &lt;code>Type&lt;/code> 1 字节和 &lt;code>Client-Identifier&lt;/code> &lt;code>n-1&lt;/code> 字节. 其中 &lt;code>Client-Identifier&lt;/code> 主要用于服务端在其数据库内鉴别查找客户端, 在 &lt;code>DHCP&lt;/code> 语义环境下 &lt;code>Type&lt;/code> 通常为 &lt;code>0x01&lt;/code> 即 &lt;code>硬件地址&lt;/code>（&lt;code>MAC&lt;/code>), 同时 &lt;code>Client-Identifier&lt;/code> 至少为 2 字节, 如果为 &lt;code>MAC&lt;/code> 地址的话则为 6 字节.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Code Len Type Client-Identifier
+-----+-----+-----+-----+-----+---
| 61 | n | t1 | i1 | i2 | ...
+-----+-----+-----+-----+-----+---
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>&lt;code>Requested IP Address&lt;/code> 该选项用于客户端在 &lt;code>DHCPDISCOVER&lt;/code> 消息中向服务端请求指定的 &lt;code>IP&lt;/code>.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Code Len Address
+-----+-----+-----+-----+-----+-----+
| 50 | 4 | a1 | a2 | a3 | a4 |
+-----+-----+-----+-----+-----+-----+
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>&lt;code>Parameter Request List&lt;/code> 该选项用于 &lt;code>DHCP&lt;/code> 客户端向服务端请求特定的配置.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Code Len Option Codes
+-----+-----+-----+-----+---
| 55 | n | c1 | c2 | ...
+-----+-----+-----+-----+---
&lt;/code>&lt;/pre>&lt;p>当前可选的配置有:&lt;/p>
&lt;pre tabindex="0">&lt;code>Subnet Mask - 0x01
Router Option - 0x03
Domain Name Server Option - 0x06
Network Time Protocol Servers Option - 0x42
&lt;/code>&lt;/pre>&lt;ol start="5">
&lt;li>&lt;code>End Option&lt;/code> 该选项为结束标识, 用于标识消息体的结束, 对应客户端发送的消息可立即结束于此处, 对应服务端发回的消息 &lt;code>RFC&lt;/code> 要求 &lt;code>options&lt;/code> 字段需填充至少 &lt;code>312&lt;/code> 且至多 &lt;code>576&lt;/code> 字节.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Code
+-----+
| 255 |
+-----+
&lt;/code>&lt;/pre>&lt;ol start="6">
&lt;li>&lt;code>Pad Option&lt;/code> 该选项主要用于字段填充.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Code
+-----+
| 0 |
+-----+
&lt;/code>&lt;/pre>&lt;ol start="7">
&lt;li>&lt;code>Subnet Mask&lt;/code> 该选项用于指示客户端子网掩码, 其 &lt;code>Len&lt;/code> 为固定 4 字节(&lt;code>DHCPv4&lt;/code>), 后续 4 字节为对应的子网掩码值. 同时如果服务端同时提供了 &lt;code>router option&lt;/code> 则 &lt;code>Subnet Mask&lt;/code> 应该位于前部.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Code Len Subnet Mask
+-----+-----+-----+-----+-----+-----+
| 1 | 4 | m1 | m2 | m3 | m4 |
+-----+-----+-----+-----+-----+-----+
&lt;/code>&lt;/pre>&lt;ol start="8">
&lt;li>&lt;code>Router Option&lt;/code> 该选项主要用于列举当前网络可路由的 &lt;code>IP&lt;/code> 地址, 同时其 &lt;code>Len&lt;/code> 最少为 4 且永远为 4 的倍数.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Code Len Address 1 Address 2
+-----+-----+-----+-----+-----+-----+-----+-----+--
| 3 | n | a1 | a2 | a3 | a4 | a1 | a2 | ...
+-----+-----+-----+-----+-----+-----+-----+-----+--
&lt;/code>&lt;/pre>&lt;ol start="9">
&lt;li>&lt;code>Renewal (T1) Time Value&lt;/code> 该选项主要用于指示从客户端获取 &lt;code>IP&lt;/code> 地址到续期该 &lt;code>IP&lt;/code> 所需间隔时间. &lt;code>T1 Interval&lt;/code> 为 4 字节 32 位整数, 单位为 &lt;code>秒&lt;/code>.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Code Len T1 Interval
+-----+-----+-----+-----+-----+-----+
| 58 | 4 | t1 | t2 | t3 | t4 |
+-----+-----+-----+-----+-----+-----+
&lt;/code>&lt;/pre>&lt;ol start="10">
&lt;li>&lt;/li>
&lt;/ol>
&lt;h1 id="ref">REF&lt;/h1>
&lt;ol>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc2131">RFC 2131 - Dynamic Host Configuration Protocol&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc2132">RFC 2132 - DHCP Options and BOOTP Vendor Extensions&lt;/a>&lt;/li>
&lt;/ol></content></item><item><title>解决 MikroTik RouterOS 下 NAT 回环问题</title><link>https://blog.liloew.in/posts/hairpin-nat-mikrotik-routeros-7/</link><pubDate>Tue, 16 May 2023 17:31:12 +0800</pubDate><guid>https://blog.liloew.in/posts/hairpin-nat-mikrotik-routeros-7/</guid><description>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>前段时间通过客服拿到了联通的公网 &lt;code>IP&lt;/code>, 因此也申请了域名并做了解析, 也顺利应当地在路由器上做了端口映射, 从而可以在外网可以直接通过域名加端口的形式访问内网的服务. 但也有一个问题就是当处于内网环境时通过域名反而无法访问同一内网下的服务, 必须使用内网 &lt;code>IP&lt;/code> 才行.&lt;/p>
&lt;p>其实这个问题很明显, 就是网络报文在通过路由器时路由器将报文转发给了内网服务器, 但是内网服务器在回报文的时候直接按内网地址回包了. 这个问题由来已久, 也即 &lt;code>NAT&lt;/code> 回环问题. 以下我们将通过脚本的形式在 &lt;code>RouterOS&lt;/code> 上添加 &lt;code>NAT&lt;/code> 规则来解决这个 &lt;code>NAT&lt;/code> 回环问题.&lt;/p>
&lt;p>具体环境为光猫配置了桥接后通过 &lt;code>MikroTik&lt;/code> &lt;code>RB750Gr3&lt;/code> 进行拨号, 同时 &lt;code>RB750Gr3&lt;/code> 运行的 &lt;code>RouterOS&lt;/code> 版本为 &lt;code>7.7&lt;/code>, 并且内网网段为 &lt;code>192.168.2.0/24&lt;/code>.&lt;/p></description><content>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>前段时间通过客服拿到了联通的公网 &lt;code>IP&lt;/code>, 因此也申请了域名并做了解析, 也顺利应当地在路由器上做了端口映射, 从而可以在外网可以直接通过域名加端口的形式访问内网的服务. 但也有一个问题就是当处于内网环境时通过域名反而无法访问同一内网下的服务, 必须使用内网 &lt;code>IP&lt;/code> 才行.&lt;/p>
&lt;p>其实这个问题很明显, 就是网络报文在通过路由器时路由器将报文转发给了内网服务器, 但是内网服务器在回报文的时候直接按内网地址回包了. 这个问题由来已久, 也即 &lt;code>NAT&lt;/code> 回环问题. 以下我们将通过脚本的形式在 &lt;code>RouterOS&lt;/code> 上添加 &lt;code>NAT&lt;/code> 规则来解决这个 &lt;code>NAT&lt;/code> 回环问题.&lt;/p>
&lt;p>具体环境为光猫配置了桥接后通过 &lt;code>MikroTik&lt;/code> &lt;code>RB750Gr3&lt;/code> 进行拨号, 同时 &lt;code>RB750Gr3&lt;/code> 运行的 &lt;code>RouterOS&lt;/code> 版本为 &lt;code>7.7&lt;/code>, 并且内网网段为 &lt;code>192.168.2.0/24&lt;/code>.&lt;/p>
&lt;h1 id="步骤">步骤&lt;/h1>
&lt;p>首先假设我们拥有公网 &lt;code>IP&lt;/code> 为 &lt;code>1.2.3.4&lt;/code>, 现在新建一条 &lt;code>NAT&lt;/code> 规则用于将内网服务暴露到外网:&lt;/p>
&lt;pre tabindex="0">&lt;code>/ip firewall nat add chain=dstnat dst-address-type=local protocol=tcp dst-port=18080 action=dst-nat to-addresses=192.168.2.123 to-ports=8080 comment=&amp;#34;Vaultwarden&amp;#34;
&lt;/code>&lt;/pre>&lt;p>这里新建规则意思是当访问 &lt;code>1.2.3.4:18080&lt;/code> 上的服务时将其转发到内网的 &lt;code>192.168.2.123:8080&lt;/code> 端口上. 在添加完这条规则后我们可以通过外网测试访问是否成功, 如无外网环境则可以通过蜂窝网络进行测试.&lt;/p>
&lt;p>当确认以上端口转发规则没有问题后, 现在可以再新建一条用于解决 &lt;code>NAT&lt;/code> 回环的规则, 在 &lt;code>MikroTik&lt;/code> 官方文档中则被称为 &lt;code>Hairpin NAT&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>/ip firewall nat add chain=srcnat src-address=192.168.2.0/24 dst-address=192.168.2.0/24 protocol=tcp out-interface-list=LAN action=masquerade comment=&amp;#34;Hairpin-NAT&amp;#34;
&lt;/code>&lt;/pre>&lt;p>这里我们新建的规则是当匹配到 &lt;code>SRC&lt;/code> 和 &lt;code>DST&lt;/code> 地址都为 &lt;code>192.168.2.0/24&lt;/code> 网段下时则进行 &lt;code>masquerade&lt;/code> 地址伪装, 而网上不上针对 &lt;code>NAT&lt;/code> 回环规则则匹配端口从而导致如果有多条端口转发规则时需要配置对应数量的 &lt;code>NAT&lt;/code> 回环规则, 因此我们这里通过匹配 &lt;code>SRC&lt;/code> 和 &lt;code>DST&lt;/code> 地址的形式来最大化复用该规则. 此时在内网环境下已经可以通过公网 &lt;code>IP&lt;/code> 或域名的形式访问同一内网下的服务了, 从而实现内外网访问地址的统一, 避免了频繁切换地址的问题.&lt;/p></content></item><item><title>在 CentOS 8 下编译 QEMU 以支持运行 macOS 虚拟机</title><link>https://blog.liloew.in/posts/compile-qemu-on-centos-8-with-macos-support/</link><pubDate>Tue, 11 Apr 2023 17:45:08 +0800</pubDate><guid>https://blog.liloew.in/posts/compile-qemu-on-centos-8-with-macos-support/</guid><description>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>由于项目组选择采用 &lt;code>Electron&lt;/code> 构建跨平台客户端, 因此存在一个问题就是如何利用 &lt;code>CI/CD&lt;/code> 进行自动构建与发布. 当前内部使用 &lt;code>Jenkins&lt;/code> 进行自动构建, 但 &lt;code>Jenkins&lt;/code> 仍需要 &lt;code>macOS&lt;/code> 平台以便构建 &lt;code>DMG&lt;/code> 包进行分发. 因此在不考虑实体机的情况下, 最便捷的方案便是可以能创建一台 &lt;code>macOS&lt;/code> 的虚拟机了, 通过虚拟机可以方便地复制构建环境从而不和任意硬件货环境绑定.&lt;/p>
&lt;p>但当前的问题一是默认情况下 &lt;code>CentOS 8&lt;/code> 下提供的 &lt;code>4.2.0&lt;/code> 版本的 &lt;code>QEMU&lt;/code> 比较老了, 另一个问题则是 &lt;code>RHEL&lt;/code> 在分发的时候移除了相当多的 &lt;code>QEMU&lt;/code> 特性, 无法直接创建 &lt;code>macOS&lt;/code> 虚拟机, 因此我们需要手动修改 &lt;code>QEMU&lt;/code> 的代码并自行构建 &lt;code>RPM&lt;/code> 包修复这两个问题.&lt;/p></description><content>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>由于项目组选择采用 &lt;code>Electron&lt;/code> 构建跨平台客户端, 因此存在一个问题就是如何利用 &lt;code>CI/CD&lt;/code> 进行自动构建与发布. 当前内部使用 &lt;code>Jenkins&lt;/code> 进行自动构建, 但 &lt;code>Jenkins&lt;/code> 仍需要 &lt;code>macOS&lt;/code> 平台以便构建 &lt;code>DMG&lt;/code> 包进行分发. 因此在不考虑实体机的情况下, 最便捷的方案便是可以能创建一台 &lt;code>macOS&lt;/code> 的虚拟机了, 通过虚拟机可以方便地复制构建环境从而不和任意硬件货环境绑定.&lt;/p>
&lt;p>但当前的问题一是默认情况下 &lt;code>CentOS 8&lt;/code> 下提供的 &lt;code>4.2.0&lt;/code> 版本的 &lt;code>QEMU&lt;/code> 比较老了, 另一个问题则是 &lt;code>RHEL&lt;/code> 在分发的时候移除了相当多的 &lt;code>QEMU&lt;/code> 特性, 无法直接创建 &lt;code>macOS&lt;/code> 虚拟机, 因此我们需要手动修改 &lt;code>QEMU&lt;/code> 的代码并自行构建 &lt;code>RPM&lt;/code> 包修复这两个问题.&lt;/p>
&lt;h1 id="步骤">步骤&lt;/h1>
&lt;p>首先执行以下命令安装 &lt;code>yum-utils&lt;/code> 和 &lt;code>rpm-build&lt;/code> 两个包以便下载对应的 &lt;code>SRC&lt;/code> 包同时进行编译&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo yum install -y yum-utils rpm-build
&lt;/code>&lt;/pre>&lt;p>&lt;code>yum-utils&lt;/code> 包会提供一个 &lt;code>yumdownloader&lt;/code> 命令, 此时再通过以下命令下载 &lt;code>qemu-kvm&lt;/code> 的源代码即可:&lt;/p>
&lt;pre tabindex="0">&lt;code>yumdownloader --source qemu-kvm
&lt;/code>&lt;/pre>&lt;p>&lt;code>yumdownloader&lt;/code> 会下载对应版本的 &lt;code>SRC&lt;/code> 包到当前目录, 当前 &lt;code>CentOS 8&lt;/code> 系统提供的 &lt;code>qemu&lt;/code> 版本为 &lt;code>6.0.0&lt;/code>, 因此下载得到的包为 &lt;code>qemu-kvm-6.0.0-33.el8.src.rpm&lt;/code>. 此时再通过以下命令安装 &lt;code>SRC&lt;/code> 包即可:&lt;/p>
&lt;pre tabindex="0">&lt;code>rpm -ivh qemu-kvm-6.0.0-33.el8.src.rpm
&lt;/code>&lt;/pre>&lt;p>同样, 安装以上命令执行完成后会新建一个与执行命令用户绑定的 &lt;code>$HOME/rpmbuild&lt;/code> 目录, 所有相关文件都在该目录下所示:&lt;/p>
&lt;pre tabindex="0">&lt;code>[root@vm-centos-8 ~]# tree -L 1 $HOME/rpmbuild
/root/rpmbuild
├── SOURCES
└── SPECS
2 directories, 0 files
[root@vm-centos-8 ~]#
&lt;/code>&lt;/pre>&lt;p>在编译前还需要安装相关的依赖库, 执行以下命令安装即可:&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo yum install -y zlib-devel wget usbredir-devel texinfo systemtap-sdt-devel systemtap systemd-devel \
spice-server-devel spice-protocol snappy-devel rsync rdma-core-devel python3-sphinx python3-devel pixman-devel \
perl-podlators perl-Test-Harness pciutils-devel numactl-devel bluez-libs-devel brlapi-devel check-devel cpp \
cyrus-sasl-devel device-mapper-multipath-devel glib2-devel glusterfs-api-devel glusterfs-devel gnutls-devel \
iasl libaio-devel libattr-devel libcacard-devel libcap-ng-devel libcurl-devel libgcrypt-devel libiscsi-devel \
libpmem-devel libpng-devel librados-devel librbd-devel libseccomp-devel libssh-devel libtool libusbx-devel \
libuuid-devel lzo-devel ncurses-devel nss-devel meson ninja-build libepoxy libepoxy-devel libdrm libdrm-devel \
mesa-libgbm-devel libxkbcommon-devel
&lt;/code>&lt;/pre>&lt;p>此时编译前的环境已经准备就绪了, 但因为 &lt;code>RedHat&lt;/code> 在构建 &lt;code>qemu&lt;/code> 时移除了一些虚拟设备, 因此我们还需要进一步修改刚刚得到的 &lt;code>$HOME/rpmbuild&lt;/code> 目录下的问题. 具体修改的文件为 &lt;code>$HOME/rpmbuild/SOURCES/0006-Enable-disable-devices-for-RHEL.patch&lt;/code>, 主要是添加以下内容:&lt;/p>
&lt;pre tabindex="0">&lt;code>CONFIG_APPLESMC=y
CONFIG_VMXNET3_PCI=y
&lt;/code>&lt;/pre>&lt;p>这里在增加 &lt;code>APPLESMC&lt;/code> 支持以外还同时增加了 &lt;code>vmxnet3&lt;/code> 虚拟网卡设备主要原因在于相较于 &lt;code>E1000/E1000E&lt;/code> 而言 &lt;code>vmxnet3&lt;/code> 可以提供更好的性能, 不使用 &lt;code>virtio&lt;/code> 的原因则是 &lt;code>macOS&lt;/code> 当前对 &lt;code>virtio&lt;/code> 的支持还不太确定, 而 &lt;code>vmxnet3&lt;/code> 则是官方支持的. 另外由于我们是直接修改 &lt;code>patch&lt;/code> 文件, 因此需要遵守 &lt;code>patch&lt;/code> 文件格式规范, 以上只是主要修改的内容. 如果修改没有问题此时我们执行以下命令进行编译:&lt;/p>
&lt;pre tabindex="0">&lt;code>cd $HOME/rpmbuild
rpmbuild --nocheck --define &amp;#34;debug_package %{nil}&amp;#34; -bb SPECS/qemu-kvm.spec
&lt;/code>&lt;/pre>&lt;p>以上命令通过选项禁用了编译后的 &lt;code>test&lt;/code> 以及 &lt;code>debuginfo&lt;/code> 包的编译以便节约时间. 如果没有意外的话以上命令正常结束后会在 &lt;code> $HOME/rpmbuild/RPMS/$(uname -m)&lt;/code> 目录下生成所有编译好的 &lt;code>rpm&lt;/code> 包. 对于该目录下的 &lt;code>RPM&lt;/code> 包我们可以选择性的安装也可以全部安装:&lt;/p>
&lt;pre tabindex="0">&lt;code>cd $HOME/rpmbuild/RPMS/$(uname -m)
yum localinstall -y ./*.rpm
&lt;/code>&lt;/pre>&lt;p>也可将以上 &lt;code>RPM&lt;/code> 包分发到其他 &lt;code>CentOS 8&lt;/code> 的机器上安装.&lt;/p>
&lt;h1 id="补充">补充&lt;/h1>
&lt;p>在完成 &lt;code>RPM&lt;/code> 编译后最好先确认下是否已将 &lt;code>apple&lt;/code> 和 &lt;code>vmxnet3&lt;/code> 设备的支持编译进去:&lt;/p>
&lt;pre tabindex="0">&lt;code>export QEMU_VERSION=&amp;#34;6.0.0&amp;#34;
cd $HOME/rpmbuild
BUILD/qemu-${QEMU_VERSION}/qemu_kvm_build/qemu-system-x86_64 -device help | egrep -i &amp;#34;apple|vmxnet3&amp;#34;
&lt;/code>&lt;/pre>&lt;p>如果没有问题的话会看到包含 &lt;code>isa-applesmc&lt;/code> 和 &lt;code>vmxnet3&lt;/code> 的两行输出.&lt;/p>
&lt;p>另外一个问题是当前编译后的 &lt;code>RPM&lt;/code> 包内没有包含 &lt;code>vmxnet3&lt;/code> 的 &lt;code>rom&lt;/code> 文件, 因此需要收到拷贝一下:&lt;/p>
&lt;pre tabindex="0">&lt;code>export QEMU_VERSION=&amp;#34;6.0.0&amp;#34;
cd $HOME/rpmbuild
cp BUILD/qemu-${QEMU_VERSION}/pc-bios/efi-vmxnet3.rom /usr/share/qemu-kvm
&lt;/code>&lt;/pre>&lt;p>此时在创建虚拟机时便可指定网卡类型为 &lt;code>vmxnet3&lt;/code> 了.&lt;/p>
&lt;h2 id="再补充">再补充&lt;/h2>
&lt;p>对于以上需要修改 &lt;code>patch&lt;/code> 文件的步骤可以直接使用以下命令:&lt;/p>
&lt;pre tabindex="0">&lt;code>export PATCH_FILE=&amp;#34;/tmp/devices-$(uuidgen).patch&amp;#34;
cd $HOME/rpmbuild
cat &amp;gt; &amp;#34;${PATCH_FILE}&amp;#34; &amp;lt;&amp;lt; EOF
--- SOURCES/0006-Enable-disable-devices-for-RHEL.patch 2021-09-17 21:43:45.000000000 +0800
+++ 0006-Enable-disable-devices-for-RHEL.patch 2023-04-07 18:05:42.535508928 +0800
@@ -319,7 +319,7 @@
index 0000000000..9f41400530
--- /dev/null
+++ b/default-configs/devices/x86_64-rh-devices.mak
-@@ -0,0 +1,104 @@
+@@ -0,0 +1,106 @@
+include rh-virtio.mak
+
+CONFIG_AC97=y
@@ -424,6 +424,8 @@
+CONFIG_TPM_TIS_ISA=y
+CONFIG_TPM_EMULATOR=y
+CONFIG_TPM_PASSTHROUGH=y
++CONFIG_APPLESMC=y
++CONFIG_VMXNET3_PCI=y
diff --git a/default-configs/devices/x86_64-softmmu.mak b/default-configs/devices/x86_64-softmmu.mak
index 64b2ee2960..e57bcff7d9 100644
--- a/default-configs/devices/x86_64-softmmu.mak
EOF
patch SOURCES/0006-Enable-disable-devices-for-RHEL.patch &amp;#34;${PATCH_FILE}&amp;#34;
&lt;/code>&lt;/pre></content></item><item><title>书</title><link>https://blog.liloew.in/books/</link><pubDate>Mon, 27 Feb 2023 21:27:35 +0800</pubDate><guid>https://blog.liloew.in/books/</guid><description/><content/></item><item><title>Spring Boot 项目下载文件接口问题</title><link>https://blog.liloew.in/posts/spring-boot-file-download-with-multi-thread/</link><pubDate>Sun, 26 Feb 2023 21:26:48 +0800</pubDate><guid>https://blog.liloew.in/posts/spring-boot-file-download-with-multi-thread/</guid><description>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>今天组内研发同学报告说项目中有一个模块提供了文件下载的接口, 在实际使用中遇到有客户使用 &lt;code>迅雷&lt;/code> 进行离线下载的情况, 同时模块中针对文件下载的接口做了 &lt;code>AOP&lt;/code> 切面进行计费统计. 而 &lt;code>迅雷&lt;/code> 会针对该接口进行多线程并发下载, 同时即使退出 &lt;code>迅雷&lt;/code>, &lt;code>迅雷&lt;/code> 还会继续发起对文件下载接口的调用. 于是便抽空大致看了下项目内的代码, 出问题的接口功能也比较简单, 并没有很复杂的逻辑. 其大致实现如下:&lt;/p></description><content>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>今天组内研发同学报告说项目中有一个模块提供了文件下载的接口, 在实际使用中遇到有客户使用 &lt;code>迅雷&lt;/code> 进行离线下载的情况, 同时模块中针对文件下载的接口做了 &lt;code>AOP&lt;/code> 切面进行计费统计. 而 &lt;code>迅雷&lt;/code> 会针对该接口进行多线程并发下载, 同时即使退出 &lt;code>迅雷&lt;/code>, &lt;code>迅雷&lt;/code> 还会继续发起对文件下载接口的调用. 于是便抽空大致看了下项目内的代码, 出问题的接口功能也比较简单, 并没有很复杂的逻辑. 其大致实现如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiOperation&lt;/span>&lt;span style="color:#f92672">(&lt;/span>value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;下载文件模板&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@GetMapping&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/download/{y}/{m}/{d}/{filePath}&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ResponseEntity&lt;span style="color:#f92672">&amp;lt;&lt;/span>FileSystemResource&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">download&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#a6e22e">@PathVariable&lt;/span> String y&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@PathVariable&lt;/span> String m&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@PathVariable&lt;/span> String d&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@PathVariable&lt;/span> String filePath&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filePath &lt;span style="color:#f92672">=&lt;/span> y &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> m &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> d &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> filePath&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> HBFileUtil&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">downloadFile&lt;/span>&lt;span style="color:#f92672">(&lt;/span>fileManageService&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">download&lt;/span>&lt;span style="color:#f92672">(&lt;/span>filePath&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> ResponseEntity &lt;span style="color:#a6e22e">downloadFile&lt;/span>&lt;span style="color:#f92672">(&lt;/span>File file&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(!&lt;/span>file&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isFile&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">||&lt;/span> FileUtil&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isEmpty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResultVO notFound &lt;span style="color:#f92672">=&lt;/span> ResultUtil&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">error&lt;/span>&lt;span style="color:#f92672">(&lt;/span>HttpStatus&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">NOT_FOUND&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> HttpStatus&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">NOT_FOUND&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getReasonPhrase&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ResponseEntity&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">status&lt;/span>&lt;span style="color:#f92672">(&lt;/span>HttpStatus&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">NOT_FOUND&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">body&lt;/span>&lt;span style="color:#f92672">(&lt;/span>notFound&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpHeaders headers &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HttpHeaders&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Cache-Control&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;no-cache, no-store, must-revalidate&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Content-Disposition&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;attachment; filename=&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> file&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Pragma&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Expires&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Last-Modified&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Date&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ETag&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> String&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">valueOf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ResponseEntity&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ok&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">headers&lt;/span>&lt;span style="color:#f92672">(&lt;/span>headers&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">contentLength&lt;/span>&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">length&lt;/span>&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">contentType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>MediaType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">APPLICATION_OCTET_STREAM&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">body&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FileSystemResource&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="排查---1">排查 - 1&lt;/h1>
&lt;p>首先的疑问便是 &lt;code>迅雷&lt;/code> 果不其然如此暴力, 但转念一想也不应该. 即使 &lt;code>迅雷&lt;/code> 以流氓著称, 但其核心还是进行多线程下载. 而多线程下载的前提是下载接口支持分片, 显然模块内接口是不支持的. 所以这个问题应该不那么简单.&lt;/p>
&lt;h1 id="排查---2">排查 - 2&lt;/h1>
&lt;p>首先是起了一个 &lt;code>DEMO&lt;/code> 工程, 参照现有模块中文件下载接口 &lt;code>Mock&lt;/code> 了一个类似的接口:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@RequestMapping&lt;/span>&lt;span style="color:#f92672">(&lt;/span>path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/download&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> method &lt;span style="color:#f92672">=&lt;/span> RequestMethod&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">GET&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">downadFileGET&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#a6e22e">@RequestParam&lt;/span>&lt;span style="color:#f92672">(&lt;/span>value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> required &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> defaultValue &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> String fileId&lt;span style="color:#f92672">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpServletResponse response&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileDownloadBO fileDownloadBO &lt;span style="color:#f92672">=&lt;/span> FileDownloadBO&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">builder&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">(&lt;/span>fileId&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">build&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">info&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;下载开始: {} 时间: {}&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> fileDownloadBO&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getId&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File&lt;span style="color:#f92672">(&lt;/span>fileService&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">checkFile&lt;/span>&lt;span style="color:#f92672">(&lt;/span>fileDownloadBO&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BufferedInputStream is &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BufferedInputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FileInputStream&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Cache-Control&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;no-cache, no-store, must-revalidate&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Content-Disposition&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;attachment; filename=&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> file&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Pragma&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Expires&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Last-Modified&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Date&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setHeader&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ETag&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> String&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">valueOf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setContentLengthLong&lt;/span>&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">length&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setContentType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>MediaType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">APPLICATION_OCTET_STREAM_VALUE&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IOUtils&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">copy&lt;/span>&lt;span style="color:#f92672">(&lt;/span>is&lt;span style="color:#f92672">,&lt;/span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getOutputStream&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">flushBuffer&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">info&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;下载成功: {} 时间: {}&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> fileDownloadBO&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getId&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>IOException e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">error&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;拷贝文件流异常: {} 时间: {}&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> e&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getMessage&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">finally&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">info&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;下载结束: {} 时间: {}&amp;#34;&lt;/span> &lt;span style="color:#f92672">,&lt;/span> fileDownloadBO&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getId&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过 &lt;code>curl&lt;/code> 测试可正常下载文件:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export CURL&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/usr/bin/curl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export BASE_URL&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://192.168.1.4:8080&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>CURL&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -X GET &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>BASE_URL&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/v1/file/download&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再通过 &lt;code>axel&lt;/code> 工具进行测试, 发现 &lt;code>axel&lt;/code> 指出该接口不支持多线程下载并切换为单线程下载:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export AXEL&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/usr/bin/axel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export BASE_URL&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://192.168.1.4:8080&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>AXEL&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -v -n &lt;span style="color:#ae81ff">20&lt;/span> -o f.f &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>BASE_URL&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/v1/file/download&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出如下:&lt;/p>
&lt;pre tabindex="0">&lt;code>Initializing download: http://192.168.1.3:8080/v1/file/download
File size: 173.246 Megabyte(s) (181661264 bytes)
Opening output file f.f
Server unsupported, starting from scratch with one connection.
Starting download
[ 12%] [....0 ] [ 10.2MB/s] [00:14]
&lt;/code>&lt;/pre>&lt;p>对应的服务端日志为:&lt;/p>
&lt;pre tabindex="0">&lt;code>2023-02-24 09:47:16.001 INFO 80611 --- [nio-8080-exec-4] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203236001
2023-02-24 09:47:16.003 ERROR 80611 --- [nio-8080-exec-4] c.e.d.controller.FileController : 拷贝文件流异常: java.io.IOException: Broken pipe 时间: 1677203236003
2023-02-24 09:47:16.003 INFO 80611 --- [nio-8080-exec-4] c.e.d.controller.FileController : 下载结束: 1 时间: 1677203236003
2023-02-24 09:47:16.006 INFO 80611 --- [nio-8080-exec-5] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203236006
&lt;/code>&lt;/pre>&lt;p>可以明显看到 &lt;code>axel&lt;/code> 调用了两次文件下载接口. 这是符合预期的, 因为服务端不支持分片/断点下载, 所以 &lt;code>axel&lt;/code> 在尝试分片失败后切换为常规单线程下载.&lt;/p>
&lt;h1 id="排查---3">排查 - 3&lt;/h1>
&lt;p>经与模块内有问题的代码进行对比发现区别较大的地方在于:&lt;/p>
&lt;pre tabindex="0">&lt;code>一个是接口的返回类型, 有问题的接口返回的是 `ResponseEntity`, 而正常的接口无返回值; 也正因为此, 有问题的接口通过 ResponseEntity 通过 body 参数返回, 而正常的接口则通过 IO 流拷贝的形式传输数据.
&lt;/code>&lt;/pre>&lt;p>因此同样 &lt;code>Mock&lt;/code> 了一个返回类型为 &lt;code>ResponseEntity&lt;/code> 的接口如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@RequestMapping&lt;/span>&lt;span style="color:#f92672">(&lt;/span>path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/downloadR&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> method &lt;span style="color:#f92672">=&lt;/span> RequestMethod&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">GET&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> ResponseEntity &lt;span style="color:#a6e22e">downloadFileGETResponseEntity&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#a6e22e">@RequestParam&lt;/span>&lt;span style="color:#f92672">(&lt;/span>value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> required &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> defaultValue &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> String fileId&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileDownloadBO fileDownloadBO &lt;span style="color:#f92672">=&lt;/span> FileDownloadBO&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">builder&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">(&lt;/span>fileId&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">build&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">info&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;下载开始: {} 时间: {}&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> fileDownloadBO&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getId&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File&lt;span style="color:#f92672">(&lt;/span>fileService&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">checkFile&lt;/span>&lt;span style="color:#f92672">(&lt;/span>fileDownloadBO&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpHeaders headers &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HttpHeaders&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Cache-Control&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;no-cache, no-store, must-revalidate&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Content-Disposition&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;attachment; filename=&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> file&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Pragma&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Expires&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Last-Modified&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Date&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ETag&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> String&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">valueOf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>&lt;span style="color:#f92672">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResponseEntity res &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">=&lt;/span> ResponseEntity&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ok&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">headers&lt;/span>&lt;span style="color:#f92672">(&lt;/span>headers&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">contentLength&lt;/span>&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">length&lt;/span>&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">contentType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>MediaType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">APPLICATION_OCTET_STREAM&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">body&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FileSystemResource&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Exception e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RuntimeException&lt;span style="color:#f92672">(&lt;/span>e&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> res&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>同样分别通过 &lt;code>curl&lt;/code> 和 &lt;code>axel&lt;/code> 针对该接口进行测试发现, &lt;code>axel&lt;/code> 接口在该接口上进行了多线程并发下载, &lt;code>axel&lt;/code> 的输出如下:&lt;/p>
&lt;pre tabindex="0">&lt;code>Initializing download: http://192.168.1.3:8080/v1/file/downloadR
File size: 173.246 Megabyte(s) (181661264 bytes)
Opening output file f.f
Starting download
[ 9%] [.01.2.3.45 6 7 8 9A B C D E F G H I J ] [ 10.1MB/s] [00:15]
&lt;/code>&lt;/pre>&lt;p>同时也可看到服务端日志也明确说明该接口被进行了多次调用:&lt;/p>
&lt;pre tabindex="0">&lt;code>2023-02-24 09:56:05.877 INFO 80611 --- [nio-8080-exec-7] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765877
2023-02-24 09:56:05.882 INFO 80611 --- [nio-8080-exec-8] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765882
2023-02-24 09:56:05.882 INFO 80611 --- [nio-8080-exec-9] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765882
2023-02-24 09:56:05.882 INFO 80611 --- [nio-8080-exec-1] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765882
2023-02-24 09:56:05.882 INFO 80611 --- [nio-8080-exec-2] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765882
2023-02-24 09:56:05.882 INFO 80611 --- [io-8080-exec-10] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765882
2023-02-24 09:56:05.883 INFO 80611 --- [nio-8080-exec-3] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765883
2023-02-24 09:56:05.884 INFO 80611 --- [nio-8080-exec-4] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765884
2023-02-24 09:56:05.884 INFO 80611 --- [nio-8080-exec-5] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765884
2023-02-24 09:56:05.885 INFO 80611 --- [io-8080-exec-11] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765885
2023-02-24 09:56:05.886 INFO 80611 --- [nio-8080-exec-7] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765886
2023-02-24 09:56:05.885 INFO 80611 --- [nio-8080-exec-6] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765885
2023-02-24 09:56:05.889 INFO 80611 --- [io-8080-exec-13] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765889
2023-02-24 09:56:05.893 INFO 80611 --- [io-8080-exec-14] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765893
2023-02-24 09:56:05.894 INFO 80611 --- [io-8080-exec-15] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765894
2023-02-24 09:56:05.897 INFO 80611 --- [io-8080-exec-16] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765897
2023-02-24 09:56:05.900 INFO 80611 --- [io-8080-exec-17] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765900
2023-02-24 09:56:05.901 INFO 80611 --- [io-8080-exec-18] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765901
2023-02-24 09:56:05.903 INFO 80611 --- [io-8080-exec-19] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765903
2023-02-24 09:56:05.908 INFO 80611 --- [io-8080-exec-20] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765908
2023-02-24 09:56:05.886 INFO 80611 --- [io-8080-exec-12] c.e.d.controller.FileController : 下载开始: 1 时间: 1677203765886
&lt;/code>&lt;/pre>&lt;h1 id="分析---1">分析 - 1&lt;/h1>
&lt;p>至此问题便比较清晰了, 如果使用 &lt;code>ResponseEntity&lt;/code> 的话客户端就会误认为该接口支持分片下载, 而如果直接通过 &lt;code>IO&lt;/code> 流进行拷贝的话则不会有这个问题. 那么为什么会导致这个问题呢, 是哪里让客户端误认为服务器支持分片下载呢 ? 首先想到的可能便是服务端在返回时通过 &lt;code>Header&lt;/code> 告诉客户端该接口是支持分片下载的, 通过 &lt;code>curl&lt;/code> 的 &lt;code>-v&lt;/code> 参数可以看到请求和响应头:
以下内容是正常接口的请求和响应头:&lt;/p>
&lt;pre tabindex="0">&lt;code>* TCP_NODELAY set
* Connected to 192.168.1.3 (192.168.1.3) port 8080 (#0)
&amp;gt; GET /v1/file/download HTTP/1.1
&amp;gt; Host: 192.168.1.3:8080
&amp;gt; User-Agent: curl/7.64.1
&amp;gt; Accept: */*
&amp;gt;
&amp;lt; HTTP/1.1 200
&amp;lt; Cache-Control: no-cache, no-store, must-revalidate
&amp;lt; Content-Disposition: attachment; filename=small.data
&amp;lt; Pragma: no-cache
&amp;lt; Expires: 0
&amp;lt; Last-Modified: Fri Feb 24 10:21:14 CST 2023
&amp;lt; ETag: 1677205274463
&amp;lt; Content-Type: application/octet-stream
&amp;lt; Content-Length: 181661264
&amp;lt; Date: Fri, 24 Feb 2023 02:21:14 GMT
&amp;lt;
&lt;/code>&lt;/pre>&lt;p>以下内容是客户端误认为支持分片下载的请求和响应头:&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;gt; GET /v1/file/downloadR HTTP/1.1
&amp;gt; Host: 192.168.1.3:8080
&amp;gt; User-Agent: curl/7.64.1
&amp;gt; Accept: */*
&amp;gt;
&amp;lt; HTTP/1.1 200
&amp;lt; ETag: &amp;#34;1677205253508&amp;#34;
&amp;lt; Cache-Control: no-cache, no-store, must-revalidate
&amp;lt; Content-Disposition: attachment; filename=large.data
&amp;lt; Pragma: no-cache
&amp;lt; Expires: 0
&amp;lt; Accept-Ranges: bytes
&amp;lt; Content-Type: application/octet-stream
&amp;lt; Content-Length: 181661264
&amp;lt; Date: Fri, 24 Feb 2023 02:20:53 GMT
&amp;lt;
&lt;/code>&lt;/pre>&lt;p>我们主要分析响应部分, 通过对比可以发现有问题的接口在响应头里多了一个 &lt;code>Accept-Ranges: bytes&lt;/code>, 很明显该 &lt;code>Header&lt;/code> 是用于分片/断点下载的.
而分析上面的代码可以看到没有配置该 &lt;code>Header&lt;/code>, 那么是哪里添加了该内容呢 ? 不难想到应该是 &lt;code>Spring&lt;/code> 替我们做了这些事情, 那么如何知道 &lt;code>Spring&lt;/code> 是在哪一步为我们做这些事情的呢 ?&lt;/p>
&lt;h1 id="继续分析">继续分析&lt;/h1>
&lt;p>我们通过在 &lt;code>application.properities&lt;/code> 文件中中增加 &lt;code>debug=true&lt;/code> 配置来查看在我们的 &lt;code>Controller&lt;/code> &lt;code>return&lt;/code> 以后还走了哪些路径. 此时我们仍然通过 &lt;code>curl&lt;/code> 进行调用而不再使用支持断点续传的客户端以免产生多次调用影响我们的分析进程. 我们只关心 &lt;code>Controller&lt;/code> 返回以后的逻辑, 故服务端日志如下:&lt;/p>
&lt;pre tabindex="0">&lt;code>2023-02-24 10:28:41.202 INFO 81955 --- [nio-8080-exec-1] c.e.d.controller.FileController : 下载开始: 1 时间: 1677205721202
2023-02-24 10:28:41.218 DEBUG 81955 --- [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor : Found &amp;#39;Content-Type:application/octet-stream&amp;#39; in response
2023-02-24 10:28:41.218 DEBUG 81955 --- [nio-8080-exec-1] o.s.w.s.m.m.a.HttpEntityMethodProcessor : Writing [file [/tmp/large.data]]
2023-02-24 10:28:41.232 DEBUG 81955 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet : Failed to complete request: org.apache.catalina.connector.ClientAbortException: java.io.IOException: Broken pipe
&lt;/code>&lt;/pre>&lt;p>最后一行报错亦可忽略, 这是因为 &lt;code>curl&lt;/code> 不支持文件下载的原因(仅测试, 未完全配置). 通过以上日志可以看到, 在我们的 &lt;code>Controller&lt;/code> 返回后, 还额外走了 &lt;code>HttpEntityMethodProcessor&lt;/code> 两部分的逻辑. 在 &lt;code>HttpEntityMethodProcessor&lt;/code> 内通过相关的关键字没有匹配到具体的代码, 但 &lt;code>HttpEntityMethodProcessor&lt;/code> 继承自 &lt;code>AbstractMessageConverterMethodProcessor&lt;/code>, 最终我们在 &lt;code>AbstractMessageConverterMethodProcessor&lt;/code> 内通过 &lt;code>Found&lt;/code>, &lt;code>Writing&lt;/code> 关键字可定位具体的代码. 由于 &lt;code>Spring&lt;/code> 替我们增加了 &lt;code>Accept-Ranges: bytes&lt;/code> 头, 因此我们再通过 &lt;code>bytes&lt;/code> 关键字
最终我们定位到在 &lt;code>AbstractMessageConverterMethodProcessor.java&lt;/code> 文件中有我们想要的内容:
, 在其中搜索 &lt;code>bytes&lt;/code> 便可找到如下代码:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>isResourceType&lt;span style="color:#f92672">(&lt;/span>value&lt;span style="color:#f92672">,&lt;/span> returnType&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outputMessage&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getHeaders&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>HttpHeaders&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ACCEPT_RANGES&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bytes&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>value &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> inputMessage&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getHeaders&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getFirst&lt;/span>&lt;span style="color:#f92672">(&lt;/span>HttpHeaders&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">RANGE&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outputMessage&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getServletResponse&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getStatus&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Resource resource &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Resource&lt;span style="color:#f92672">)&lt;/span> value&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>HttpRange&lt;span style="color:#f92672">&amp;gt;&lt;/span> httpRanges &lt;span style="color:#f92672">=&lt;/span> inputMessage&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getHeaders&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getRange&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outputMessage&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getServletResponse&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">setStatus&lt;/span>&lt;span style="color:#f92672">(&lt;/span>HttpStatus&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PARTIAL_CONTENT&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> body &lt;span style="color:#f92672">=&lt;/span> HttpRange&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toResourceRegions&lt;/span>&lt;span style="color:#f92672">(&lt;/span>httpRanges&lt;span style="color:#f92672">,&lt;/span> resource&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> valueType &lt;span style="color:#f92672">=&lt;/span> body&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> targetType &lt;span style="color:#f92672">=&lt;/span> RESOURCE_REGION_LIST_TYPE&lt;span style="color:#f92672">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>IllegalArgumentException ex&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outputMessage&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getHeaders&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>HttpHeaders&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">CONTENT_RANGE&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bytes */&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> resource&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">contentLength&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outputMessage&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getServletResponse&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">setStatus&lt;/span>&lt;span style="color:#f92672">(&lt;/span>HttpStatus&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">REQUESTED_RANGE_NOT_SATISFIABLE&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>至此, 可以知道确实是 &lt;code>Spring&lt;/code> 为我们主动做了这件事, 如何解决呢 ?
可以看到这部分有一个前置条件:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isResourceType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#a6e22e">@Nullable&lt;/span> Object value&lt;span style="color:#f92672">,&lt;/span> MethodParameter returnType&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> clazz &lt;span style="color:#f92672">=&lt;/span> getReturnValueType&lt;span style="color:#f92672">(&lt;/span>value&lt;span style="color:#f92672">,&lt;/span> returnType&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> clazz &lt;span style="color:#f92672">!=&lt;/span> InputStreamResource&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> Resource&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isAssignableFrom&lt;/span>&lt;span style="color:#f92672">(&lt;/span>clazz&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因此一个解决方案便是输出流使用 &lt;code>InputStreamResource&lt;/code> 而不是 &lt;code>FileSystemResource&lt;/code>. 至于为何修改该判断条件的前半段, 即:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span>clazz &lt;span style="color:#f92672">!=&lt;/span> InputStreamResource&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而非后半段呢 ? 原因在于 &lt;code>FileSystemResource&lt;/code> 和 &lt;code>InputStreamResource&lt;/code> 都继承自 &lt;code>AbstractResource&lt;/code>, 而 &lt;code>AbstractResource&lt;/code> 则继承自 &lt;code>Resource&lt;/code>.&lt;/p>
&lt;p>修改后的代码如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">=&lt;/span> ResponseEntity&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ok&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">headers&lt;/span>&lt;span style="color:#f92672">(&lt;/span>headers&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">contentLength&lt;/span>&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">length&lt;/span>&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">contentType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>MediaType&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">APPLICATION_OCTET_STREAM&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">body&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> InputStreamResource&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FileInputStream&lt;span style="color:#f92672">(&lt;/span>file&lt;span style="color:#f92672">)));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="补充">补充&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>以上修改后 &lt;code>axel&lt;/code> 不再进行多线程下载了, 但 &lt;code>迅雷&lt;/code> 还是会进行多线程下载. 经多次测试发现, 如果响应头中包含 &lt;code>Content-Length&lt;/code> 则迅雷还是会进行多线程下载. 解决方案是不再设置该 &lt;code>Header&lt;/code>. 另一点需要注意是, 如果不设置 &lt;code>Content-Length&lt;/code> 则 &lt;code>Nginx&lt;/code> 会自动为我们加上 &lt;code>Transfer-Encoding: chunked&lt;/code> 头. 根据定义可知 &lt;code>Transfer-Encoding&lt;/code> 和 &lt;code>Content-Length&lt;/code> 是不兼容的.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过以上排查路径可以知道, 这里关键的问题在于服务端在给客户端的响应头里额外增加了 &lt;code>Accept-Ranges: bytes&lt;/code>, 如在一些不便于修改代码的场景下也可以通过 &lt;code>Nginx&lt;/code> 将部分响应头去除的方式修复.&lt;/p>
&lt;p>2.1. 使用 &lt;code>openresty/openresty&lt;/code> 镜像代替默认的 &lt;code>nginx&lt;/code>;&lt;/p>
&lt;p>2.2. 相对于原始的 &lt;code>nginx&lt;/code> 配置文件做如下修改:&lt;/p>
&lt;pre tabindex="0">&lt;code># nginx.conf 中添加
load_module &amp;#34;modules/ngx_http_headers_more_filter_module.so&amp;#34;;
# 在 server 的 location 段落中添加
more_clear_headers &amp;#39;Accept-Ranges&amp;#39;;
more_clear_headers &amp;#39;Content-Length&amp;#39;;
&lt;/code>&lt;/pre>&lt;p>&lt;code>axel&lt;/code> 在移除 &lt;code>Accept-Ranges&lt;/code> 即不再进行多线程下载, 但 &lt;code>迅雷&lt;/code> 在检测到 &lt;code>Content-Length&lt;/code> 响应头后依然会发起多线程进行下载.&lt;/p>
&lt;p>2.3. 重启容器即可;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>也可使用 &lt;code>debian&lt;/code> 容器中安装 &lt;code>nginx-extras&lt;/code> 包来应用 &lt;code>headers_more_filter&lt;/code> 模块:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> debian:latest&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> sed -i &lt;span style="color:#e6db74">&amp;#39;s/deb.debian.org/mirrors.ustc.edu.cn/g&amp;#39;&lt;/span> /etc/apt/sources.list &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> apt-get update -y &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> apt-get install nginx nginx-extras -y &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> rm -rf /var/lib/apt/lists/*&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">CMD&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;nginx&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;-g&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;daemon off;&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ref">REF&lt;/h1>
&lt;ol>
&lt;li>&lt;a href="https://github.com/spring-projects/spring-framework/commit/582014e944002609b562f6e4998935c06bbe6922">Support HTTP range requests in MVC Controllers &lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/2419281/content-length-header-versus-chunked-encoding">Content-Length header versus chunked encoding&lt;/a>&lt;/li>
&lt;/ol></content></item><item><title>关于我</title><link>https://blog.liloew.in/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.liloew.in/about/</guid><description>lilo is the owner of this site. You could contact him through email via bHVvbGVlLm1lQGdtYWlsLmNvbQo=.</description><content>&lt;p>&lt;code>lilo&lt;/code> is the owner of this site. You could contact him through email via &lt;code>bHVvbGVlLm1lQGdtYWlsLmNvbQo=&lt;/code>.&lt;/p></content></item></channel></rss>